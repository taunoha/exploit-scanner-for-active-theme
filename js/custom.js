;(function($) {

    var wp = window.wp;

    // Generate Hashes
    //
    function newHashesSuccess(data) {
        $('#px-theme-scanner-hashes').text(data.last_modified);
        $('.card-tools').addClass('has-hashes');
    }

    function newHashesError(data) {}

    function newHashes(e) {
        e.preventDefault();
        var $self = $(this);
        var btnLabel = $self.text();

        $self.prop('disabled', true).text('Please wait...').addClass('loading');

        wp.ajax.send('px_theme_scanner_hashes', {
            success: function(data) {
                $self.prop('disabled', false).text(btnLabel).removeClass('loading');
                newHashesSuccess(data);
            },
            error: function(data) {
                $self.prop('disabled', false).text(btnLabel).removeClass('loading');
                newHashesError(data);
            },
            data: {
                nonce: pxThemeScannerVars.nonce
            }
        });
    }
    $(document).on('click', '[data-action="pxNewHashes"]', newHashes);

    // Check hashes
    //
    function checkHashesSuccess(data) {
        var $con = $('#px-theme-scanner-results');
        var $table = $('#tmpl-px-theme-results').find('table');
        var template = wp.template('px-theme-results');
        var row = _.template('<tr><td><%= file %></td><td><%= last_modified %></td><td><%= status %></td></tr>');
        var rows = [];

        if( data.length ) {
            _.each(data, function(item) {
                rows.push( row(item) );
            });
        } else {
            rows.push('<tr><td colspan="3" style="color: green"><b>No changes were detected in files</b></td></tr>');
        }

        $con.html(template());
        $con.find('tbody').html(rows.join(''));

        $('#px-theme-scanner-scan').text('Just now');
    }

    function checkHashesError(data) {
        $('#px-theme-scanner-results').html('<p><b style="color: orange">' + data + '</b></p>');
    }

    function checkHashes(e) {
        var $self = $(this);
        var btnLabel = $self.text();

        $self.prop('disabled', true).text('Please wait...').addClass('loading');

        wp.ajax.send('px_theme_scanner_check', {
            success: function(data) {
                $self.prop('disabled', false).text(btnLabel).removeClass('loading');
                checkHashesSuccess(data);
            },
            error: function(data) {
                $self.prop('disabled', false).text(btnLabel).removeClass('loading');
                checkHashesError(data);
            },
            data: {
                nonce: pxThemeScannerVars.nonce
            }
        });
    }
    $(document).on('click', '[data-action="pxScanHashes"]', checkHashes);

    // Check hashes via uploaded hashes
    //
    function uploadJSON(e)
    {
        e.preventDefault();
        $('#hashes_files').trigger('click').on('change', startUpload);
    }

    function startUploadError(data) {
        $('#px-theme-scanner-results').html('<div class="updated error is-dismissible"><p>' + data + '</p><button type="button" class="notice-dismiss"><span class="screen-reader-text">Dismiss this notice.</span></button></div>');
    }

    function startUpload()
    {
        var reader = new FileReader();
        var file = $('#hashes_files').prop('files')[0];

        reader.onload = function(evt) {
            hashes = evt.target.result;

            wp.ajax.send('px_theme_scanner_upload', {
                success: checkHashesSuccess,
                error: startUploadError,
                data: {
                    nonce: pxThemeScannerVars.nonce,
                    hashes: hashes
                }
            });
        };

        reader.readAsText(file, "UTF-8");
        $('#hashes_files').closest('form').get(0).reset();
    }
    $(document).on('click', '[data-action="pxUploadJSON"]', uploadJSON);

})(jQuery);
